<?php
/**
 * Maketok ProductReviews module
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/AFL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to maketok.info@gmail.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Maketok ProductReviews to newer
 * versions in the future. If you wish to customize Maketok ProductReviews for your
 * needs please refer to http://www.maketok.com for more information.
 *
 * @category    design
 * @copyright   Copyright (c) 2013 Maketok (http://www.maketok.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/** @var $this Maketok_ProductReviews_Block_Sidebar  */
/** @var $collection Maketok_ProductReviews_Model_Resource_Review_Collection */
$collection = $this->getReviewCollection();
/** @var $helper Maketok_ProductReviews_Helper_Data */
$helper = Mage::helper('productreviews');
if ($collection->getSize() > 0):
?>
<div class="block block-productreviews-sidebar">
    <div class="block-title">
        <strong><span><?php echo $this->getTitle() ?></span></strong>
    </div>
    <div class="block-content">
        <div id="reviews-content-<?php echo $this->getNameInLayout()?>"></div>
    </div>
</div>

<script type="text/javascript">
    /*
    template
     */
    var jsonData;
    var finalHtml;
    jsonData = <?php echo Zend_Json::encode($collection->toArray())?>;
    var template = new Template(<?php echo Zend_Json::encode($this->getChildHtml('review.mock'))?>);
    finalHtml = '';
    jsonData.items.each(function (item) {
        finalHtml += template.evaluate(item);
    });
    $('reviews-content-<?php echo $this->getNameInLayout()?>').insert(finalHtml);
    decorateGeneric($$('#reviews-content-<?php echo $this->getNameInLayout()?> div.review'), ['first','last']);

    <?php if ($helper->getSidebarUpdateInterval()):?>

    updateSidebar_<?php echo md5($this->getNameInLayout())?> = function() {
        var lastId;
        var splitId;
        splitId = $$('#reviews-content-<?php echo $this->getNameInLayout()?> .review')[0].id.split('-');
        lastId = splitId[splitId.length - 1];
        new Ajax.Request('<?php echo Mage::getUrl('productreviews/sidebar/update')?>last_id/'+ lastId, {
            method:'get',
            onSuccess: function(transport) {
                var response;
                var collection;
                var addHtml;
                var count;
                if (transport && transport.responseText) {
                    try {
                        response = eval('(' + transport.responseText + ')');
                    }
                    catch (e) {
                        response = {};
                    }
                }
                if (!response.error) {
                    collection = response.collection.items;
                    addHtml = '';
                    collection.each(function(item) {
                        addHtml += template.evaluate(item);
                    });
                    $('reviews-content-<?php echo $this->getNameInLayout()?>').insert({top: addHtml});
                    count = collection.length;
                    var i;
                    var reviews;
                    reviews = $$('#reviews-content-<?php echo $this->getNameInLayout()?> .review');
                    i = 0;
                    while (count > i) {
                        if (!reviews[reviews.length - 1 - i]) {
                            continue;
                        }
                        reviews[reviews.length - 1 - i].addClassName('remove-flag');
                        new Effect.Fade(reviews[reviews.length - 1 - i],
                            {
                                duration: 1,
                                afterFinishInternal: function() {
                                    $$('#reviews-content-<?php echo $this->getNameInLayout()?> .review.remove-flag').each( function(item) {
                                        item.remove();
                                    });
                                    var rr;
                                    rr = $$('#reviews-content-<?php echo $this->getNameInLayout()?> .review');
                                    rr[rr.length - 1].addClassName('last');
                                }
                            }
                        );
                        i++;
                    }
                }
            },
            onFailure: function() {
                // do not need to notify about the error
            },
            onComplete: function() {
                // we have no loader
            }
        });
    };
    var interval = setInterval('updateSidebar_<?php echo md5($this->getNameInLayout())?>()', <?php echo $helper->getSidebarUpdateInterval()?>);
    <?php endif;?>
</script>
<?php endif ?>